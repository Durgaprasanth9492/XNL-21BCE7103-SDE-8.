name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🏗️ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'  # Enable caching for faster installs

      - name: 📦 Restore npm Cache
        id: cache-npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-cache-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-cache-${{ runner.os }}-

      - name: 📦 Install Dependencies
        run: npm ci  # Faster and ensures a clean install

      - name: 🔒 Run Snyk Security Scan
        run: npx snyk test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: 🎨 Run ESLint & Prettier
        run: |
          npm run lint
          npm run format:check || echo "Prettier check failed, but continuing..."

      - name: ✅ Run Tests
        run: npm run test

      - name: 🔧 Build Project
        run: npm run build

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🏗️ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci  # Faster than npm install

      - name: 🚀 Deploy to Vercel
        run: npx vercel --prod --yes --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: 🔍 Download & Extract OWASP ZAP
        run: |
          wget -q https://github.com/zaproxy/zaproxy/releases/download/v2.14.0/ZAP_2.14.0_Linux.tar.gz
          tar -xzf ZAP_2.14.0_Linux.tar.gz
          mv ZAP_2.14.0 zaproxy

      - name: 🔍 Run OWASP ZAP Security Scan
        run: /usr/share/zaproxy/zap-baseline.py -t https://vit-test.vercel.app/
